version: '1.0'

services:
  services:
    image: alpine
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7.24
    ports:
      - "6033:3306"
    expose:
      - "3306/tcp"
    environment:
      MYSQL_USER: test
      MYSQL_PASSWORD: 1H1jyZ^p
      MYSQL_ROOT_PASSWORD: 1H1jyZ^p
      MYSQL_DATABASE: next_integration_test
    command: [mysqld, --lower_case_table_names=1]

  elasticsearch:
    image: elasticsearch:5.2.1
    ports:
      - "9200:9200"
      - "9300:9300"
    expose:
      - "9200/tcp"
      - "9300/tcp"
    environment:
      iscovery.type: single-node
    command: [elasticsearch, -Ecluster.name=next-es]

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "3181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.1.0
    ports:
      - "19092:19092"
    expose:
      - "9092/tcp"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://127.0.0.1:19092
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - zookeeper:zookeeper

  wait_for_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - services
    links:
      - kafka:kafka
      - zookeeper:zookeeper
      - mysql:mysql
      - elasticsearch
    command: zookeeper:2181 kafka:9092 mysql:3306 elasticsearch:9200
    environment:
      SLEEP_LENGTH: 1
